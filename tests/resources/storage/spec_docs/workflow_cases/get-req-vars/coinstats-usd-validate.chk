---
version: default:validate:0.7.2

variables:
  vdata: ~

asserts:
  - { type: Equal, actual: <% vdata.code %>, expected: 200, msg_pass: 'Response was successful with code `{type_actual}({value_actual})`', cast_actual_to: int }
  - { type: Map, actual: <% vdata.headers %>, msg_pass: 'Header is a list', msg_fail: 'Header is not a list' }
  - { type: Str, actual: <% vdata.code %>, msg_pass: 'Code `{type_actual}({value_actual})` is a string', msg_fail: 'Code `{type_actual}({value_actual})` is not a string', cast_actual_to: int }
  - { type: StrHave, actual: <% vdata.info %>, other: "200 OK" }
  - { type: Map, actual: <% vdata.body %> }
  - { type: List, actual: <% vdata.body.explorers %> }
  - { type: Float, actual: <% vdata.body.price %> }
  - { type: MapHasKeys, actual: <% vdata.body %>, expected: [ "price", "priceBtc", "priceChange1d", "priceChange1h", "priceChange1w" ] }

expose:
  - <% _asserts_response %>
  - <% vdata %>

# --- shell command ---
# chk validate tests/resources/storage/spec_docs/workflow_cases/get-req-vars/coinstats-usd-validate.chk -V "{\"vdata\": "$(poetry run python -m chk fetch -nf tests/resources/storage/spec_docs/workflow_cases/get-req-vars/coinstats-usd-request.chk | jq '.[0]')\"}"
# ---
